---
apiVersion: v1
kind: Service
metadata:
  name: mangahash-api-service
spec:
  type: LoadBalancer
  selector:
    app: mangahash-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mangahash-api
  labels:
    app: mangahash-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mangahash-api
  template:
    metadata:
      labels:
        app: mangahash-api
    spec:
      containers:
      - name: mangahash-api
        image: mangahash-api:prod
        ports:
        - containerPort: 9090
        env:
          - name: DATABASE_HOST
            value: mangahash-db-service
          - name: DATABASE_PORT
            value: "5432"
          - name: DATABASE_NAME
            value: mangahash-db
          - name: DATABASE_USER
            value: mangahash-db-user
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-password
                key: password
---
apiVersion: v1
kind: Service
metadata:
  name: mangahash-db-service
spec:
  type: ClusterIP
  selector:
    app: mangahash-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mangahash-db
  labels:
    app: mangahash-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mangahash-db
  template:
    metadata:
      labels:
        app: mangahash-db
    spec:
      containers:
      - name: mangahash-db
        image: postgres:13.12-alpine 
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-password
                key: password
          - name: POSTGRES_USER
            value: mangahash-db-user
          - name: POSTGRES_DB
            value: mangahash-db
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: db-password
type: Opaque
data:
  password: dG1wcGFzcw== # base 64 encoded (tmppass)

